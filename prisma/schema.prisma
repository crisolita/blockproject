// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
model orders {
  id           Int       @id @default(autoincrement())
  sellerID     Int
  buyerId      Int?
  nftId        Int
  eventoId     Int
  active       Boolean?
  txHash       String?
  createdAt    DateTime
  completedAt  DateTime?
  precio_usado Float?
  adicionales String?
  adicionalesUsados String?
  precio_batch String
  codigo_descuento String?
  Evento       Eventos?  @relation(fields: [eventoId], references: [id])
  User         User      @relation(fields: [sellerID], references: [id])
  Nfts         Nfts      @relation(fields: [nftId], references: [id])
}

model MarketplaceConfig {
  id      Int    @id @default(autoincrement())
  royalty Float?
}

model Nfts {
  User_id         Int?
  id              Int         @id @unique
  tipo            TicketTime?
  eventoId        Int
  txHash          String?
  caducidadVenta  DateTime?
  caducidadCanjeo DateTime?
  marketplace     Boolean?
  dorsal          String?
  Evento          Eventos?    @relation(fields: [eventoId], references: [id])
  User            User?       @relation(fields: [User_id], references: [id])
  Orders          orders[]
}

model User {
  id                 Int       @id @default(autoincrement())
  first_name         String?
  last_name          String?
  balance            Int?
  email              String    @unique
  password           String?
  wallet             String    @unique
  key                String
  authToken          String?
  acctStpId          String?
  clientSecret       String?
  tokenValidUntil    DateTime?
  googleID           String?   @unique
  user_rol           ROL
  company_name       String?
  company_cif        String?
  descripcion        String?
  foto_perfil        String?
  instagram          String?
  twitter            String?
  facebook           String?
  Nfts               Nfts[]
  Orders             orders[]
  Eventos            Eventos[]
  Entrada            Entrada[]
  userInfo           userInfo?
}


model userInfo {
  user_id Int  @unique
  documento Documento
  numero_documento String
  telefono String
  birth_date         DateTime
  gender Genero
  numero_de_licencia String?
  direccion_postal String
  talla_camisa   Talla
  club    String?
  user    User @relation(fields: [user_id], references: [id])
}

model RequestOrganizador {
  user_id Int           @unique
  status  StatusRequest
}

/// Validar los tipos para la fecha, para los urls de la imagenes
model Eventos {
  id                 Int            @id @default(autoincrement())
  creator_id         Int
  name               String
  place              String?
  date               DateTime
  distancia          Int?
  modalidad          Modales
  subcategoria       SubCategorias?
  profile_image      String?
  banner_image       String?
  instagram          String?
  twitter            String?
  facebook           String?
  fecha_inicio_venta DateTime?
  fecha_final_venta  DateTime?
  fecha_asignacion   DateTime?
  descripcion        String?
  Nfts               Nfts[]
  User               User?          @relation(fields: [creator_id], references: [id])
  Entrada            Entrada[]
  orders             orders[]
}

model Entrada {
  id          Int      @id @default(autoincrement())
  qrCode      String?  @unique
  user_id     Int
  evento_id   Int
  create_at   DateTime
  expire_at   DateTime
  valid_start DateTime
  dorsal      String
  nftId       Int      @unique
  used        Boolean?
  burnHash    String?
  User        User?    @relation(fields: [user_id], references: [id])
  Evento      Eventos? @relation(fields: [evento_id], references: [id])
}
enum Modales {
  Triathlon
  Running
  Ciclismo
}

enum TicketTime {
  Entrada
  Cupon
}

enum ROL {
  DEPORTISTA
  ORGANIZADOR
}

enum StatusRequest {
  RECHAZADO
  APROBADO
  PENDIENTE
}

enum SubCategorias {
  KM_5
  KM_10
  Media_maraton_21km
  Maraton_42km
  Sprint
  Olimpico
  Half
  Full
  Ruta
  Montanbike_MTB
  Gravel
}
enum Genero {
  MASCULINO
  FEMENINO
  OTROS
 }
 enum Talla {
  XS
  S
  M
  L
  XL
  XXL
 }
 enum Documento {
  PASAPORTE
  DNI
 }